.component NeoAxis.Component_Scene
{
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	.component NeoAxis.Component_Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "3.82435536055154 -6.49608566107907 5.0967613852218; -0.348012431368145 0.240194913089753 0.745806612838021 0.514748722762978; 1 1 1"
	}
	.component NeoAxis.Component_Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -5.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 30000
	}
	.component NeoAxis.Component_RenderingPipeline_Default
	{
		Name = Rendering Pipeline
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.Component_RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
			}
			.component NeoAxis.Component_RenderingEffect_MotionBlur
			{
				Name = Motion Blur
			}
			.component NeoAxis.Component_RenderingEffect_Bloom
			{
				Enabled = False
				Name = Bloom
			}
			.component NeoAxis.Component_RenderingEffect_LensEffects
			{
				Name = Lens Effects
			}
			.component NeoAxis.Component_RenderingEffect_ToneMapping
			{
				Name = Tone Mapping
			}
			.component NeoAxis.Component_RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.Component_RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.Component_RenderingEffect_Sharpen
			{
				Name = Sharpen
				Shader = "Base\\Shaders\\Effects\\Sharpen_fs.sc"
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.Component_Light
	{
		Name = Light 1
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; 0.754406150151168 -0.346223835921248 -0.381635976365512 -0.406637919527451; 1 1 1"
		Type = Directional
		Brightness = 130000
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.Component_Light
	{
		Enabled = False
		Name = Light 2
		Transform = "-16.276133519817 -13.7764744895929 22.8055842838911; -0.800753779408636 -0.218616030310482 0.553641801455134 0.066941554624803; 1 1 1"
		Type = Spotlight
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.Component_MeshInSpace
	{
		Name = Ground
		CanBeSelected = False
		Transform = "0 0 0; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Dark Gray.material"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		.component NeoAxis.Component_Mesh
		{
			Name = Mesh
			.component NeoAxis.Component_MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 100 100
				UVTilesPerUnit = 0.25 0.25
			}
		}
		.component NeoAxis.Component_RigidBody
		{
			Name = Collision Body
			Transform
			{
				GetByReference = "this:..\\Transform"
			}
			.component NeoAxis.Component_CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.Component_MeshInSpace
	{
		Name = Sphere
		Transform = "0.259307877040201 0.0826259415220161 0.5; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Yellow.material"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		.component NeoAxis.Component_Mesh
		{
			Name = Mesh
			.component NeoAxis.Component_MeshGeometry_Sphere
			{
				Name = Mesh Geometry
			}
		}
	}
	.component NeoAxis.Component_MeshInSpace
	{
		Name = Sphere 2
		Transform = "-9.0174143623204 0.0826259415220161 0.5; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Yellow.material"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		.component NeoAxis.Component_Mesh
		{
			Name = Mesh
			.component NeoAxis.Component_MeshGeometry_Sphere
			{
				Name = Mesh Geometry
			}
		}
	}
	.component NeoAxis.Component_MeshInSpace
	{
		Name = Cylinder
		Transform = "4.38710374793453 -0.0603045806904099 0.499999999999976; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Red.material"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		.component NeoAxis.Component_Mesh
		{
			Name = Mesh
			.component NeoAxis.Component_MeshGeometry_Cylinder
			{
				Name = Mesh Geometry
			}
		}
	}
	.component NeoAxis.Component_MeshInSpace
	{
		Name = Cylinder 2
		Transform = "-4.88961849142607 -0.0603045806904099 0.499999999999976; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Red.material"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		.component NeoAxis.Component_Mesh
		{
			Name = Mesh
			.component NeoAxis.Component_MeshGeometry_Cylinder
			{
				Name = Mesh Geometry
			}
		}
	}
	.component NeoAxis.Component_GroupOfObjects
	{
		Name = Group Of Objects
		BaseObjects
		{
			Count = 1
			0 "NeoAxis.Reference<NeoAxis.Component>"
			{
				GetByReference = "root:$Ground"
			}
		}
	}
	.component NeoAxis.Component_MeshInSpace
	{
		Name = Plane 1
		Transform = "2.33263635099915 -1.70686293400226 0.73613854320587; 0 0 0 1; 1 1 1"
		CastShadows = False
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "root:$Water 1"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		.component NeoAxis.Component_Mesh
		{
			Name = Mesh
			.component NeoAxis.Component_MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 5.8 5.8
			}
		}
	}
	.component NeoAxis.Component_MeshInSpace
	{
		Name = Box 1
		CanBeSelected = False
		Transform = "2.38765780702607 -1.67388753208416 0.406182708642642; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Gray.material"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		.component NeoAxis.Component_Mesh
		{
			Name = Mesh
			.component NeoAxis.Component_MeshGeometry
			{
				Name = Mesh Geometry
				VertexStructure
				{
					Value
					{
						Length = 5
						0
						{
							Offset = 0
							Type = Float3
							Semantic = Position
						}
						1
						{
							Offset = 12
							Type = Float3
							Semantic = Normal
						}
						2
						{
							Offset = 24
							Type = Float4
							Semantic = Tangent
						}
						3
						{
							Offset = 40
							Type = Float4
							Semantic = Color0
						}
						4
						{
							Offset = 56
							Type = Float2
							Semantic = TextureCoordinate0
						}
					}
				}
				Vertices
				{
					Value
					{
						Length = 7680
						.elements = "AABAwAAAQEAAAAA/AACAvwAAAAAAAACAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQMAAAEBAAAAAvwAAgL8AAAAAAAAAgAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAEDAAABAwAAAAL8AAIC/AAAAAAAAAIAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAwAAAQMAAAAC/AACAvwAAAAAAAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQMAAAEDAAAAAPwAAgL8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAEDAAABAQAAAAD8AAIC/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAQAAAQEAAAAC/AACAPwAAAAAAAACAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQEAAAEBAAAAAPwAAgD8AAAAAAAAAgAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAEBAAABAwAAAAD8AAIA/AAAAAAAAAIAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAQAAAQMAAAAA/AACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQEAAAEDAAAAAvwAAgD8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAEBAAABAQAAAAL8AAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAwAAAQMAAAAC/AAAAAAAAgL8AAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQEAAAEDAAAAAvwAAAAAAAIC/AAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAEBAAABAwAAAAD8AAAAAAACAvwAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAQAAAQMAAAAA/AAAAgAAAgL8AAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQMAAAEDAAAAAPwAAAIAAAIC/AAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAEDAAABAwAAAAL8AAACAAACAvwAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAwAAAQEAAAAC/AAAAAAAAgD8AAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQMAAAEBAAAAAPwAAAAAAAIA/AAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAEBAAABAQAAAAD8AAAAAAACAPwAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAQAAAQEAAAAA/AAAAAAAAgD8AAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQEAAAEBAAAAAvwAAAAAAAIA/AAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAEDAAABAQAAAAL8AAAAAAACAPwAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAwAAAQEAAAAC/AAAAAAAAAAAAAIC/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQEAAAEBAAAAAvwAAAAAAAAAAAACAvwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAEBAAABAwAAAAL8AAAAAAAAAAAAAgL8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAQAAAQMAAAAC/AAAAAAAAAAAAAIC/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQMAAAEDAAAAAvwAAAAAAAAAAAACAvwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAEDAAABAQAAAAL8AAAAAAAAAAAAAgL8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAQAAAQEAAAAA/AAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQMAAAEBAAAAAPwAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADDAAAAwQAAAAD8AAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAwAAAQEAAAAA/AAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMMC+K2Q/AAAAPwAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADDAAAAwQAAAAD8AAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAwAAAQEAAAAA/AAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQMAAAEDAAAAAPwAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADDAvitkPwAAAD8AAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAQAAAQEAAAAA/AAAAAAAAAAD//38/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMEAAADBAAAAAPwAAAAAAAAAA//9/PwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADBAvitkvwAAAD8AAAAAAAAAAP//fz8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAQAAAQMAAAAA/AAAAAAAAAIAAAIA/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQEAAAEBAAAAAPwAAAAAAAACAAACAPwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADBAvitkvwAAAD8AAAAAAAAAgAAAgD8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAQAAAQEAAAAA/AAAAAAAAAAD//38/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMMAAADBAAAAAPwAAAAAAAAAA//9/PwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAC+K2Q/AAAwQAAAAD8AAAAAAAAAAP//fz8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAwAAAQMAAAAA/AAAAAAAAAAD//38/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMMAAADDAAAAAPwAAAAAAAAAA//9/PwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADDAvitkPwAAAD8AAAAAAAAAAP//fz8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAAAwwAAAMMAAAAA/AAAAgAAAAAAAAIA/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQMAAAEDAAAAAPwAAAIAAAAAAAACAPwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAATXxTAAAAwwAAAAD8AAACAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAwAAAQMAAAAA/AAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQEAAAEDAAAAAPwAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADBAAAAwwAAAAD8AAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAQAAAQMAAAAA/AAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMEC+K2S/AAAAPwAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADBAAAAwwAAAAD8AAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAE18UQAAAMEAAAAA/AAAAAAAAAIAAAIA/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQEAAAEBAAAAAPwAAAAAAAACAAACAPwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAC+K2Q/AAAwQAAAAD8AAAAAAAAAgAAAgD8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAAAwQAAAMEAAAAA/AAAAAAAAAIAAAIA/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQEAAAEBAAAAAPwAAAAAAAACAAACAPwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAATXxRAAAAwQAAAAD8AAAAAAAAAgAAAgD8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAABAwAAAQMAAAAA/AAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMEAAADDAAAAAPwAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAC+K2Q/AAAwwAAAAD8AAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAE18UwAAAMMAAAAA/AAAAgAAAAAD//38/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAQMAAAEDAAAAAPwAAAIAAAAAA//9/PwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAC+K2Q/AAAwwAAAAD8AAACAAAAAAP//fz8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAAAwQAAAMEBE8SW+AAAAAAAAAAD//38/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMMAAADBARPElvgAAAAAAAAAA//9/PwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADBAAAAwwETxJb4AAAAAAAAAAP//fz8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAAAwwAAAMMBE8SW+AAAAAAAAAAD//38/AACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMEAAADDARPElvgAAAAAAAAAA//9/PwAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADDAAAAwQETxJb4AAAAAAAAAAP//fz8AAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAAAwwL4rZD8AAAA/AACAPwAAAIAAAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMMAAADDARPElvgAAgD8AAACAAAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADDAAAAwQAAAAD8AAIA/AAAAgAAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAAAwwAAAMEAAAAA/AACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMMAAADDARPElvgAAgD8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADDAAAAwQETxJb4AAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAAAwwAAAMMBE8SW+AACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMMC+K2Q/AAAAPwAAgD8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADDAAAAwwAAAAD8AAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAAAwQAAAMEBE8SW+AACAvwAAAAAAAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMEC+K2S/AAAAPwAAgL8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADBAAAAwQAAAAD8AAIC/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAAAwQL4rZL8AAAA/AACAvwAAAIAAAACAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMEAAADBARPElvgAAgL8AAACAAAAAgAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADBAAAAwwAAAAD8AAIC/AAAAgAAAAIAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAAAwQAAAMMAAAAA/AACAvwAAAAAAAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMEAAADBARPElvgAAgL8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADBAAAAwwETxJb4AAIC/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAAAwQAAAMMAAAAA/AAAAAAAAgD8AAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMEAAADDARPElvgAAAAAAAIA/AAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAC+K2Q/AAAwwAAAAD8AAAAAAACAPwAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAvitkPwAAMMAAAAA/AAAAAAAAgD8AAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMEAAADDARPElvgAAAAAAAIA/AAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADDAAAAwwETxJb4AAAAAAACAPwAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAAAwwAAAMMBE8SW+AAAAAAAAgD8AAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMMAAADDAAAAAPwAAAAAAAIA/AAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAATXxTAAAAwwAAAAD8AAAAAAACAPwAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAAAwwAAAMEBE8SW+AAAAAAAAgL8AAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAL4rZD8AADBAAAAAPwAAAAAAAIC/AAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAADDAAAAwQAAAAD8AAAAAAACAvwAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAvitkPwAAMEAAAAA/AAAAAP//f78AAACAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMMAAADBARPElvgAAAAD//3+/AAAAgAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAATXxRAAAAwQAAAAD8AAAAA//9/vwAAAIAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAAAwwAAAMEBE8SW+AAAAAAAAgL8AAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMEAAADBARPElvgAAAAAAAIC/AAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAATXxRAAAAwQAAAAD8AAAAAAACAvwAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAvitkPwAAMMAAAAA/AAAAAAAAgD8AAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMMAAADDARPElvgAAAAAAAIA/AAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAATXxTAAAAwwAAAAD8AAAAAAACAPwAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAAAAAwQAAAMEBE8SW+AAAAAAAAgL8AAAAAAACAPwAAAAAAAAAAAACAvwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAMEAAADBAAAAAPwAAAAAAAIC/AAAAAAAAgD8AAAAAAAAAAAAAgL8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAATXxRAAAAwQAAAAD8AAAAAAACAvwAAAAAAAIA/AAAAAAAAAAAAAIC/AACAPwAAgD8AAIA/AACAPwAAAAAAAAAA"
					}
				}
				Indices
				{
					Value
					{
						Length = 120
						.elements = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119
					}
				}
			}
			Structure
			{
				Edges = 0 1 1 2 2 3 0 3 4 5 5 6 6 7 4 7 2 7 3 6 0 5 1 4 8 9 10 11 8 12 9 13 13 14 11 15 12 16 10 16 15 17 14 17 18 19 18 20 20 21 19 21 8 19 13 21 10 18 15 20
				Faces = 11 6 0 0 0 1 0 1 2 0 2 2 0 3 3 0 4 0 0 5 0 6 4 0 6 5 0 7 6 0 8 6 0 9 7 0 10 4 0 11 0 6 2 0 12 7 0 13 6 0 14 6 0 15 3 0 16 2 0 17 0 6 1 0 18 0 0 19 5 0 20 5 0 21 4 0 22 1 0 23 0 6 1 0 24 4 0 25 7 0 26 7 0 27 2 0 28 1 0 29 0 42 5 0 30 0 0 31 8 0 32 0 0 33 9 0 34 8 0 35 0 0 36 3 0 37 9 0 38 5 0 39 10 0 40 11 0 41 6 0 42 5 0 43 11 0 44 5 0 45 8 0 46 12 0 47 3 0 48 13 0 49 9 0 50 13 0 51 3 0 52 14 0 53 3 0 54 6 0 55 15 0 56 6 0 57 11 0 58 15 0 59 16 0 60 5 0 61 12 0 62 10 0 63 5 0 64 16 0 65 3 0 66 15 0 67 17 0 68 14 0 69 3 0 70 17 0 71 0 6 18 0 72 19 0 73 20 0 74 21 0 75 20 0 76 19 0 77 0 9 9 0 78 21 0 79 8 0 80 8 0 81 21 0 82 19 0 83 21 0 84 9 0 85 13 0 86 0 9 18 0 87 11 0 88 10 0 89 11 0 90 18 0 91 15 0 92 15 0 93 18 0 94 20 0 95 0 12 15 0 96 20 0 97 17 0 98 17 0 99 20 0 100 21 0 101 21 0 102 13 0 103 14 0 104 17 0 114 21 0 115 14 0 116 0 12 19 0 105 12 0 106 8 0 107 12 0 108 19 0 109 16 0 110 19 0 111 18 0 112 16 0 113 18 0 117 10 0 118 16 0 119 0
			}
		}
	}
	.component "Store\\Water\\Water.material"
	{
		Name = Water 1
		.component NeoAxis.Component_FlowGraph
		{
			CreatedByBaseType = True
			CreatedByBaseTypeHierarchyIndex = 3
			Name = Shader graph
			EditorScrollPosition = 0 0
			Specialization
			{
				GetByReference = NeoAxis.Component_FlowGraphSpecialization_Shader|Instance
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = "Node "
				Position = 27 -4
				ControlledObject
				{
					GetByReference = "this:..\\.."
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Texture Sample 1
				Position = -21 -17
				ControlledObject
				{
					GetByReference = "this:$Texture Sample"
				}
				.component NeoAxis.Component_ShaderTextureSample
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Texture Sample
					Location3 = 0 0 0
					Texture
					{
						GetByReference = "Store\\Water\\Textures\\Water.png"
					}
					Location2
					{
						GetByReference = "this:..\\..\\$Node Shader 1\\$Shader\\__parameter_ReturnValue"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Texture Sample 4
				Position = -21 4
				ControlledObject
				{
					GetByReference = "this:$Texture Sample"
				}
				.component NeoAxis.Component_ShaderTextureSample
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Texture Sample
					Location3 = 0 0 0
					Texture
					{
						GetByReference = "Store\\Water\\Textures\\Water.png"
					}
					Location2
					{
						GetByReference = "this:..\\..\\$Node Shader 2\\$Shader\\__parameter_ReturnValue"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Texture Sample 2
				Position = -21 -8
				ControlledObject
				{
					GetByReference = "this:$Texture Sample"
				}
				.component NeoAxis.Component_ShaderTextureSample
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Texture Sample
					Location3 = 0 0 0
					Texture
					{
						GetByReference = "Store\\Water\\Textures\\NormalMap.png"
					}
					Location2
					{
						GetByReference = "this:..\\..\\$Node Shader 1\\$Shader\\__parameter_ReturnValue"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Texture Sample 5
				Position = -21 13
				ControlledObject
				{
					GetByReference = "this:$Texture Sample"
				}
				.component NeoAxis.Component_ShaderTextureSample
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Texture Sample
					Location3 = 0 0 0
					Texture
					{
						GetByReference = "Store\\Water\\Textures\\NormalMap.png"
					}
					Location2
					{
						GetByReference = "this:..\\..\\$Node Shader 2\\$Shader\\__parameter_ReturnValue"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Shader Parameter 1
				Position = -53 -3
				ControlledObject
				{
					GetByReference = "this:$Shader Parameter"
				}
				.component NeoAxis.Component_ShaderParameter
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Shader Parameter
					Source
					{
						GetByReference = NeoAxis.Time|Current
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Shader 1
				Position = -37 -5
				ControlledObject
				{
					GetByReference = "this:$Shader"
				}
				.component NeoAxis.Component_ShaderScript
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Shader
					Code = "/*!public*/ vec2 FlowA(vec2 texCoord, float time, vec4 flowAndNoise)\r\n{\r\n\tbool flowB = false;\r\n\r\n\tfloat noise = flowAndNoise.a;\r\n\tfloat time2 = time * 0.5 + noise;\r\n\tfloat flowOffset = 0;\r\n\tfloat tiling = 1;\r\n\tfloat jump = 1;\r\n\tvec2 flowVector2 = flowAndNoise.xy * 2 - 1;\r\n\r\n\tfloat phaseOffset = flowB ? 0.5 : 0;\r\n\tfloat progress = frac(time2 + phaseOffset);\r\n\tfloat3 uvw;\r\n\tuvw.xy = texCoord - flowVector2 * (progress + flowOffset);\r\n\tuvw.xy *= tiling;\r\n\tuvw.xy += phaseOffset;\r\n\tuvw.xy += (time2 - progress) * jump;\r\n\tuvw.z = 1 - abs(1 - 2 * progress);\r\n\t\r\n\treturn uvw.xy;\r\n\t//return uvw;\r\n}\r\n"
					__parameter_TexCoord
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 1\\$Invoke Member\\__value_Value"
					}
					__parameter_Time
					{
						GetByReference = "this:..\\..\\$Node Shader Parameter 1\\$Shader Parameter\\Output"
					}
					__parameter_FlowAndNoise
					{
						GetByReference = "this:..\\..\\$Node Texture Sample 3\\$Texture Sample\\RGBA"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Shader 2
				Position = -37 4
				ControlledObject
				{
					GetByReference = "this:$Shader"
				}
				.component NeoAxis.Component_ShaderScript
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Shader
					Code = "/*!public*/ vec2 FlowB(vec2 texCoord, float time, vec4 flowAndNoise)\r\n{\r\n\tbool flowB = true;\r\n\r\n\tfloat noise = flowAndNoise.a;\r\n\tfloat time2 = time * 0.5 + noise;\r\n\tfloat flowOffset = 0;\r\n\tfloat tiling = 1;\r\n\tfloat jump = 1;\r\n\tvec2 flowVector2 = flowAndNoise.xy * 2 - 1;\r\n\r\n\tfloat phaseOffset = flowB ? 0.5 : 0;\r\n\tfloat progress = frac(time2 + phaseOffset);\r\n\tfloat3 uvw;\r\n\tuvw.xy = texCoord - flowVector2 * (progress + flowOffset);\r\n\tuvw.xy *= tiling;\r\n\tuvw.xy += phaseOffset;\r\n\tuvw.xy += (time2 - progress) * jump;\r\n\tuvw.z = 1 - abs(1 - 2 * progress);\r\n\t\r\n\treturn uvw.xy;\r\n\t//return uvw;\r\n}\r\n"
					__parameter_TexCoord
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 1\\$Invoke Member\\__value_Value"
					}
					__parameter_Time
					{
						GetByReference = "this:..\\..\\$Node Shader Parameter 1\\$Shader Parameter\\Output"
					}
					__parameter_FlowAndNoise
					{
						GetByReference = "this:..\\..\\$Node Texture Sample 3\\$Texture Sample\\RGBA"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Invoke Member 1
				Position = -53 -6
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.Component_InvokeMember
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Invoke Member
					Member
					{
						GetByReference = "NeoAxis.ShaderConstants|property:TexCoord0"
					}
					Exit
					{
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Texture Sample 3
				Position = -53 2
				ControlledObject
				{
					GetByReference = "this:$Texture Sample"
				}
				.component NeoAxis.Component_ShaderTextureSample
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Texture Sample
					Location2 = 0 0
					Location3 = 0 0 0
					Texture
					{
						GetByReference = "Store\\Water\\Textures\\FlowMapWithNoiseInAlpha.png"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Invoke Member 2
				Position = 11 -4
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.Component_InvokeMember
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Invoke Member
					Member
					{
						GetByReference = "NeoAxis.ColorValue|method:op_Multiply(NeoAxis.ColorValue,NeoAxis.ColorValue)"
					}
					Exit
					{
					}
					__parameter_V1
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 3\\$Invoke Member\\__parameter_ReturnValue"
					}
					__parameter_V2
					{
						GetByReference = "this:..\\..\\$Node Shader Parameter 2\\$Shader Parameter\\Output"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Invoke Member 5
				Position = -5 4
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.Component_InvokeMember
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Invoke Member
					Member
					{
						GetByReference = "NeoAxis.Vector3|method:op_Addition(NeoAxis.Vector3,NeoAxis.Vector3)"
					}
					Exit
					{
					}
					__parameter_V1
					{
						GetByReference = "this:..\\..\\$Node Texture Sample 2\\$Texture Sample\\RGBA"
					}
					__parameter_V2
					{
						GetByReference = "this:..\\..\\$Node Texture Sample 5\\$Texture Sample\\RGBA"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Invoke Member 6
				Position = 11 5
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.Component_InvokeMember
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Invoke Member
					Member
					{
						GetByReference = "NeoAxis.Vector3|method:GetNormalize()"
					}
					Exit
					{
					}
					__this_This
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 5\\$Invoke Member\\__parameter_ReturnValue"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Invoke Member 3
				Position = -5 -4
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.Component_InvokeMember
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Invoke Member
					Member
					{
						GetByReference = "NeoAxis.ColorValue|method:op_Addition(NeoAxis.ColorValue,NeoAxis.ColorValue)"
					}
					Exit
					{
					}
					__parameter_V1
					{
						GetByReference = "this:..\\..\\$Node Texture Sample 1\\$Texture Sample\\RGBA"
					}
					__parameter_V2
					{
						GetByReference = "this:..\\..\\$Node Texture Sample 4\\$Texture Sample\\RGBA"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Shader Parameter 2
				Position = 41 9
				ControlledObject
				{
					GetByReference = "this:$Shader Parameter"
				}
				.component NeoAxis.Component_ShaderParameter
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Shader Parameter
					Source
					{
						GetByReference = "this:..\\..\\..\\Color"
					}
				}
			}
		}
		.component NeoAxis.Component_FlowGraph
		{
			Name = Shader graph
			EditorScrollPosition = 0 0
			Specialization
			{
				GetByReference = NeoAxis.Component_FlowGraphSpecialization_Shader|Instance
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				Name = Node Water
				Position = 10 -7
				ControlledObject
				{
					GetByReference = "this:..\\.."
				}
			}
		}
	}
	.component NeoAxis.Component_MeshInSpace
	{
		Name = Plane 2
		Transform = "-7.00551835755155 -1.70686293400226 0.73613854320587; 0 0 0 1; 1 1 1"
		CastShadows = False
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "root:$Water 2"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		.component NeoAxis.Component_Mesh
		{
			Name = Mesh
			.component NeoAxis.Component_MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 5.8 5.8
			}
		}
	}
	.component NeoAxis.Component_MeshInSpace
	{
		Name = Box 2
		CanBeSelected = False
		Transform = "-6.95049690152463 -1.67388753208416 0.406182708642642; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Gray.material"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		.component NeoAxis.Component_Mesh
		{
			Name = Mesh
			.component NeoAxis.Component_MeshGeometry
			{
				Name = Mesh Geometry
				VertexStructure
				{
					Value
					{
						Length = 5
						0
						{
							Offset = 0
							Type = Float3
							Semantic = Position
						}
						1
						{
							Offset = 12
							Type = Float3
							Semantic = Normal
						}
						2
						{
							Offset = 24
							Type = Float4
							Semantic = Tangent
						}
						3
						{
							Offset = 40
							Type = Float4
							Semantic = Color0
						}
						4
						{
							Offset = 56
							Type = Float2
							Semantic = TextureCoordinate0
						}
					}
				}
				Vertices
				{
					Value
					{
						Length = 7680
						.elements = ""
					}
				}
				Indices
				{
					Value
					{
						Length = 120
						.elements = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119
					}
				}
			}
			Structure
			{
				Edges = 0 1 1 2 2 3 0 3 4 5 5 6 6 7 4 7 2 7 3 6 0 5 1 4 8 9 10 11 8 12 9 13 13 14 11 15 12 16 10 16 15 17 14 17 18 19 18 20 20 21 19 21 8 19 13 21 10 18 15 20
				Faces = 11 6 0 0 0 1 0 1 2 0 2 2 0 3 3 0 4 0 0 5 0 6 4 0 6 5 0 7 6 0 8 6 0 9 7 0 10 4 0 11 0 6 2 0 12 7 0 13 6 0 14 6 0 15 3 0 16 2 0 17 0 6 1 0 18 0 0 19 5 0 20 5 0 21 4 0 22 1 0 23 0 6 1 0 24 4 0 25 7 0 26 7 0 27 2 0 28 1 0 29 0 42 5 0 30 0 0 31 8 0 32 0 0 33 9 0 34 8 0 35 0 0 36 3 0 37 9 0 38 5 0 39 10 0 40 11 0 41 6 0 42 5 0 43 11 0 44 5 0 45 8 0 46 12 0 47 3 0 48 13 0 49 9 0 50 13 0 51 3 0 52 14 0 53 3 0 54 6 0 55 15 0 56 6 0 57 11 0 58 15 0 59 16 0 60 5 0 61 12 0 62 10 0 63 5 0 64 16 0 65 3 0 66 15 0 67 17 0 68 14 0 69 3 0 70 17 0 71 0 6 18 0 72 19 0 73 20 0 74 21 0 75 20 0 76 19 0 77 0 9 9 0 78 21 0 79 8 0 80 8 0 81 21 0 82 19 0 83 21 0 84 9 0 85 13 0 86 0 9 18 0 87 11 0 88 10 0 89 11 0 90 18 0 91 15 0 92 15 0 93 18 0 94 20 0 95 0 12 15 0 96 20 0 97 17 0 98 17 0 99 20 0 100 21 0 101 21 0 102 13 0 103 14 0 104 17 0 114 21 0 115 14 0 116 0 12 19 0 105 12 0 106 8 0 107 12 0 108 19 0 109 16 0 110 19 0 111 18 0 112 16 0 113 18 0 117 10 0 118 16 0 119 0
			}
		}
	}
	.component "Store\\Water\\Water.material"
	{
		Name = Water 2
		Color = 0.5554118 0.7372549 0.7114118
		.component NeoAxis.Component_FlowGraph
		{
			CreatedByBaseType = True
			CreatedByBaseTypeHierarchyIndex = 3
			Name = Shader graph
			EditorScrollPosition = 0 0
			Specialization
			{
				GetByReference = NeoAxis.Component_FlowGraphSpecialization_Shader|Instance
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = "Node "
				Position = 27 -4
				ControlledObject
				{
					GetByReference = "this:..\\.."
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Texture Sample 1
				Position = -21 -17
				ControlledObject
				{
					GetByReference = "this:$Texture Sample"
				}
				.component NeoAxis.Component_ShaderTextureSample
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Texture Sample
					Location3 = 0 0 0
					Texture
					{
						GetByReference = "Store\\Water\\Textures\\Water.png"
					}
					Location2
					{
						GetByReference = "this:..\\..\\$Node Shader 1\\$Shader\\__parameter_ReturnValue"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Texture Sample 4
				Position = -21 4
				ControlledObject
				{
					GetByReference = "this:$Texture Sample"
				}
				.component NeoAxis.Component_ShaderTextureSample
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Texture Sample
					Location3 = 0 0 0
					Texture
					{
						GetByReference = "Store\\Water\\Textures\\Water.png"
					}
					Location2
					{
						GetByReference = "this:..\\..\\$Node Shader 2\\$Shader\\__parameter_ReturnValue"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Texture Sample 2
				Position = -21 -8
				ControlledObject
				{
					GetByReference = "this:$Texture Sample"
				}
				.component NeoAxis.Component_ShaderTextureSample
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Texture Sample
					Location3 = 0 0 0
					Texture
					{
						GetByReference = "Store\\Water\\Textures\\NormalMap.png"
					}
					Location2
					{
						GetByReference = "this:..\\..\\$Node Shader 1\\$Shader\\__parameter_ReturnValue"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Texture Sample 5
				Position = -21 13
				ControlledObject
				{
					GetByReference = "this:$Texture Sample"
				}
				.component NeoAxis.Component_ShaderTextureSample
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Texture Sample
					Location3 = 0 0 0
					Texture
					{
						GetByReference = "Store\\Water\\Textures\\NormalMap.png"
					}
					Location2
					{
						GetByReference = "this:..\\..\\$Node Shader 2\\$Shader\\__parameter_ReturnValue"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Shader Parameter 1
				Position = -53 -3
				ControlledObject
				{
					GetByReference = "this:$Shader Parameter"
				}
				.component NeoAxis.Component_ShaderParameter
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Shader Parameter
					Source
					{
						GetByReference = NeoAxis.Time|Current
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Shader 1
				Position = -37 -5
				ControlledObject
				{
					GetByReference = "this:$Shader"
				}
				.component NeoAxis.Component_ShaderScript
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Shader
					Code = "/*!public*/ vec2 FlowA(vec2 texCoord, float time, vec4 flowAndNoise)\r\n{\r\n\tbool flowB = false;\r\n\r\n\tfloat noise = flowAndNoise.a;\r\n\tfloat time2 = time * 0.5 + noise;\r\n\tfloat flowOffset = 0;\r\n\tfloat tiling = 1;\r\n\tfloat jump = 1;\r\n\tvec2 flowVector2 = flowAndNoise.xy * 2 - 1;\r\n\r\n\tfloat phaseOffset = flowB ? 0.5 : 0;\r\n\tfloat progress = frac(time2 + phaseOffset);\r\n\tfloat3 uvw;\r\n\tuvw.xy = texCoord - flowVector2 * (progress + flowOffset);\r\n\tuvw.xy *= tiling;\r\n\tuvw.xy += phaseOffset;\r\n\tuvw.xy += (time2 - progress) * jump;\r\n\tuvw.z = 1 - abs(1 - 2 * progress);\r\n\t\r\n\treturn uvw.xy;\r\n\t//return uvw;\r\n}\r\n"
					__parameter_TexCoord
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 1\\$Invoke Member\\__value_Value"
					}
					__parameter_Time
					{
						GetByReference = "this:..\\..\\$Node Shader Parameter 1\\$Shader Parameter\\Output"
					}
					__parameter_FlowAndNoise
					{
						GetByReference = "this:..\\..\\$Node Texture Sample 3\\$Texture Sample\\RGBA"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Shader 2
				Position = -37 4
				ControlledObject
				{
					GetByReference = "this:$Shader"
				}
				.component NeoAxis.Component_ShaderScript
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Shader
					Code = "/*!public*/ vec2 FlowB(vec2 texCoord, float time, vec4 flowAndNoise)\r\n{\r\n\tbool flowB = true;\r\n\r\n\tfloat noise = flowAndNoise.a;\r\n\tfloat time2 = time * 0.5 + noise;\r\n\tfloat flowOffset = 0;\r\n\tfloat tiling = 1;\r\n\tfloat jump = 1;\r\n\tvec2 flowVector2 = flowAndNoise.xy * 2 - 1;\r\n\r\n\tfloat phaseOffset = flowB ? 0.5 : 0;\r\n\tfloat progress = frac(time2 + phaseOffset);\r\n\tfloat3 uvw;\r\n\tuvw.xy = texCoord - flowVector2 * (progress + flowOffset);\r\n\tuvw.xy *= tiling;\r\n\tuvw.xy += phaseOffset;\r\n\tuvw.xy += (time2 - progress) * jump;\r\n\tuvw.z = 1 - abs(1 - 2 * progress);\r\n\t\r\n\treturn uvw.xy;\r\n\t//return uvw;\r\n}\r\n"
					__parameter_TexCoord
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 1\\$Invoke Member\\__value_Value"
					}
					__parameter_Time
					{
						GetByReference = "this:..\\..\\$Node Shader Parameter 1\\$Shader Parameter\\Output"
					}
					__parameter_FlowAndNoise
					{
						GetByReference = "this:..\\..\\$Node Texture Sample 3\\$Texture Sample\\RGBA"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Invoke Member 1
				Position = -53 -6
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.Component_InvokeMember
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Invoke Member
					Member
					{
						GetByReference = "NeoAxis.ShaderConstants|property:TexCoord0"
					}
					Exit
					{
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Texture Sample 3
				Position = -53 2
				ControlledObject
				{
					GetByReference = "this:$Texture Sample"
				}
				.component NeoAxis.Component_ShaderTextureSample
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Texture Sample
					Location2 = 0 0
					Location3 = 0 0 0
					Texture
					{
						GetByReference = "Store\\Water\\Textures\\FlowMapWithNoiseInAlpha.png"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Invoke Member 2
				Position = 11 -4
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.Component_InvokeMember
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Invoke Member
					Member
					{
						GetByReference = "NeoAxis.ColorValue|method:op_Multiply(NeoAxis.ColorValue,NeoAxis.ColorValue)"
					}
					Exit
					{
					}
					__parameter_V1
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 3\\$Invoke Member\\__parameter_ReturnValue"
					}
					__parameter_V2
					{
						GetByReference = "this:..\\..\\$Node Shader Parameter 2\\$Shader Parameter\\Output"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Invoke Member 5
				Position = -5 4
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.Component_InvokeMember
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Invoke Member
					Member
					{
						GetByReference = "NeoAxis.Vector3|method:op_Addition(NeoAxis.Vector3,NeoAxis.Vector3)"
					}
					Exit
					{
					}
					__parameter_V1
					{
						GetByReference = "this:..\\..\\$Node Texture Sample 2\\$Texture Sample\\RGBA"
					}
					__parameter_V2
					{
						GetByReference = "this:..\\..\\$Node Texture Sample 5\\$Texture Sample\\RGBA"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Invoke Member 6
				Position = 11 5
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.Component_InvokeMember
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Invoke Member
					Member
					{
						GetByReference = "NeoAxis.Vector3|method:GetNormalize()"
					}
					Exit
					{
					}
					__this_This
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 5\\$Invoke Member\\__parameter_ReturnValue"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Invoke Member 3
				Position = -5 -4
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.Component_InvokeMember
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Invoke Member
					Member
					{
						GetByReference = "NeoAxis.ColorValue|method:op_Addition(NeoAxis.ColorValue,NeoAxis.ColorValue)"
					}
					Exit
					{
					}
					__parameter_V1
					{
						GetByReference = "this:..\\..\\$Node Texture Sample 1\\$Texture Sample\\RGBA"
					}
					__parameter_V2
					{
						GetByReference = "this:..\\..\\$Node Texture Sample 4\\$Texture Sample\\RGBA"
					}
				}
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				CreatedByBaseType = True
				CreatedByBaseTypeHierarchyIndex = 3
				Name = Node Shader Parameter 2
				Position = 41 9
				ControlledObject
				{
					GetByReference = "this:$Shader Parameter"
				}
				.component NeoAxis.Component_ShaderParameter
				{
					CreatedByBaseType = True
					CreatedByBaseTypeHierarchyIndex = 3
					Name = Shader Parameter
					Source
					{
						GetByReference = "this:..\\..\\..\\Color"
					}
				}
			}
		}
		.component NeoAxis.Component_FlowGraph
		{
			Name = Shader graph
			EditorScrollPosition = 0 0
			Specialization
			{
				GetByReference = NeoAxis.Component_FlowGraphSpecialization_Shader|Instance
			}
			.component NeoAxis.Component_FlowGraphNode
			{
				Name = Node Water
				Position = 10 -7
				ControlledObject
				{
					GetByReference = "this:..\\.."
				}
			}
		}
	}
}
