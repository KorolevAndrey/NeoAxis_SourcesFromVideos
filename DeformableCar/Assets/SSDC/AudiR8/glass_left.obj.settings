.component NeoAxis.Component_Import3D
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1073, 879\"><KW V=\"1\" A=\"1787C5EEC11F43D0D9AC9B3CC26DE9C0\"><CGD /><WS UN=\"E0E17972989D4E02399A153B1EC5F864\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"FF7CEAADAE8140564682A924029BE68E\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"1787C5EEC11F43D0D9AC9B3CC26DE9C0\"><KP UN=\"72E28DAD9F9F460B058EB15E18973E5A\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"1787C5EEC11F43D0D9AC9B3CC26DE9C0\" S=\"False\"><CPD ObjPath=\"$Mesh\" /></KP><KP UN=\"700E49E09A444521F29890B63AD712D5\" S=\"False\"><CPD ObjPath=\"$Materials\\$glass\\$glass shader graph\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	.component NeoAxis.Component
	{
		Name = Materials
		.component NeoAxis.Component_Material
		{
			Name = glass
			BaseColor = 0.6 0.6 0.6
			ReceiveDecals = False
			.component NeoAxis.Component_FlowGraph
			{
				Name = glass shader graph
				EditorScrollPosition = 0 0
				Specialization
				{
					GetByReference = NeoAxis.Component_FlowGraphSpecialization_Shader|Instance
				}
				.component NeoAxis.Component_FlowGraphNode
				{
					Name = Node glass
					Position = 10 -7
					ControlledObject
					{
						GetByReference = "this:..\\.."
					}
				}
			}
		}
	}
	.component NeoAxis.Component_Mesh
	{
		Name = Mesh
		.component NeoAxis.Component_MeshGeometry
		{
			Name = glass_left_gr_Plane.000
			VertexStructure
			{
				Value
				{
					Length = 4
					0
					{
						Offset = 0
						Type = Float3
						Semantic = Position
					}
					1
					{
						Offset = 12
						Type = Float3
						Semantic = Normal
					}
					2
					{
						Offset = 24
						Type = Float4
						Semantic = Tangent
					}
					3
					{
						Offset = 40
						Type = Float2
						Semantic = TextureCoordinate0
					}
				}
			}
			Vertices
			{
				Value
				{
					Length = 3840
					.elements = "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"
				}
			}
			Indices
			{
				Value
				{
					Length = 336
					.elements = 0 1 2 0 2 3 20 2 1 20 13 12 20 12 21 20 21 2 10 12 13 10 11 12 18 19 12 18 12 11 24 21 12 24 12 19 24 2 21 24 19 16 24 16 23 24 23 6 24 6 9 24 9 2 18 16 19 18 17 16 14 16 17 14 15 16 22 23 16 22 16 15 22 6 23 22 7 6 4 6 7 4 5 6 8 6 5 8 9 6 8 3 2 8 2 9 25 26 27 25 27 28 25 28 29 25 29 30 79 27 26 79 62 51 79 51 50 79 50 27 60 51 62 60 44 43 60 43 61 60 61 51 41 43 44 41 42 43 63 65 43 63 43 42 68 61 43 68 43 65 68 51 61 68 65 37 68 37 36 68 36 40 68 40 46 68 46 51 63 37 65 63 64 37 73 37 64 73 38 37 35 36 37 35 37 38 35 40 36 35 39 40 66 40 39 66 67 48 66 48 47 66 47 40 69 48 67 69 70 54 69 54 53 69 53 48 78 54 70 78 72 58 78 58 77 78 77 54 71 58 72 71 59 58 56 57 58 56 58 59 76 77 58 76 58 57 76 54 77 76 55 54 76 57 33 76 33 75 76 75 29 76 29 55 56 33 57 56 34 33 31 32 33 31 33 34 74 75 33 74 33 32 74 29 75 52 55 29 52 29 28 74 30 29 52 28 27 45 49 27 45 27 50 52 27 49 45 48 49 52 49 48 45 47 48 52 48 53 45 40 47 45 46 40 45 50 51 45 51 46 52 53 54 52 54 55
				}
			}
			Material
			{
				GetByReference = "root:$Materials\\$glass"
			}
		}
	}
}
